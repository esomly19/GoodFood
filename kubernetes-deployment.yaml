#Front end
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  labels:
    app: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
        - image: rg.fr-par.scw.cloud/goodfood/front-end:latest
          name: front-end
          imagePullPolicy: "Always"
          ports:
            - name: http
              containerPort: 3000
      imagePullSecrets:
        - name: registry-secret-deux
---
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
spec:
  selector:
    app: front-end
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000

#Auth API
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
  labels:
    app: auth-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-api
  template:
    metadata:
      labels:
        app: auth-api
    spec:
      containers:
        - name: auth-api
          imagePullPolicy: "Always"
          image: rg.fr-par.scw.cloud/goodfood/auth-api:latest
          env:
            - name: URL_USER
              value: "http://users-api:3000"
            - name: TOKEN_KEY
              value: "PIZJFOZF23I2HROZEUFH3"
      imagePullSecrets:
        - name: registry-secret-deux
---
apiVersion: v1
kind: Service
metadata:
  name: auth-api
spec:
  selector:
    app: auth-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000


#Users API
---
apiVersion: v1
kind: Service
metadata:
  name: users-api
spec:
  selector:
    app: users-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-api
  labels:
    app: users-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-api
  template:
    metadata:
      labels:
        app: users-api
    spec:
      containers:
        - name: users-db
          image: rg.fr-par.scw.cloud/goodfood/postgres:latest
          ports:
            - name: http
              containerPort: 5432
              hostPort: 5432
          env:
            - name: POSTGRES_USER
              value: prisma
            - name: POSTGRES_PASSWORD
              value: prismagoodfood
            - name: POSTGRES_DB
              value: users
        - name: users-api
          image: rg.fr-par.scw.cloud/goodfood/users-api:latest
          imagePullPolicy: "Always"
          env:
            - name: DATABASE_URL
              value: "postgresql://prisma:prismagoodfood@localhost:5432/users"
      imagePullSecrets:
        - name: registry-secret-deux



#Plats API
---
apiVersion: v1
kind: Service
metadata:
  name: plats-api
spec:
  selector:
    app: plats-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plats-api
  labels:
    app: plats-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plats-api
  template:
    metadata:
      labels:
        app: plats-api
    spec:
      containers:
        - name: plats-db
          image: rg.fr-par.scw.cloud/goodfood/postgres:latest
          ports:
            - name: http
              containerPort: 5432
              hostPort: 5434
          env:
            - name: POSTGRES_USER
              value: prisma
            - name: POSTGRES_PASSWORD
              value: prismagoodfood
            - name: POSTGRES_DB
              value: plats
        - name: plats-api
          image: rg.fr-par.scw.cloud/goodfood/plats-api:latest
          imagePullPolicy: "Always"
          env:
            - name: DATABASE_URL
              value: "postgresql://prisma:prismagoodfood@localhost:5432/plats"
      imagePullSecrets:
        - name: registry-secret-deux

#Restaurants API
---
apiVersion: v1
kind: Service
metadata:
  name: restaurants-api
spec:
  selector:
    app: restaurants-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurants-api
  labels:
    app: restaurants-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurants-api
  template:
    metadata:
      labels:
        app: restaurants-api
    spec:
      containers:
        - name: restaurants-db
          image: rg.fr-par.scw.cloud/goodfood/postgres:latest
          ports:
            - name: http
              containerPort: 5432
              hostPort: 5433
          env:
            - name: POSTGRES_USER
              value: prisma
            - name: POSTGRES_PASSWORD
              value: prismagoodfood
            - name: POSTGRES_DB
              value: restaurants
        - name: restaurants-api
          image: rg.fr-par.scw.cloud/goodfood/restaurants-api:latest
          imagePullPolicy: "Always"
          env:
            - name: DATABASE_URL
              value: "postgresql://prisma:prismagoodfood@localhost:5432/restaurants"
      imagePullSecrets:
        - name: registry-secret-deux


#Commandes API
---
apiVersion: v1
kind: Service
metadata:
  name: commandes-api
spec:
  selector:
    app: commandes-api
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: commandes-api
  labels:
    app: commandes-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: commandes-api
  template:
    metadata:
      labels:
        app: commandes-api
    spec:
      containers:
        - name: commandes-db
          image: rg.fr-par.scw.cloud/goodfood/postgres:latest
          ports:
            - name: http
              containerPort: 5432
              hostPort: 5435
          env:
            - name: POSTGRES_USER
              value: prisma
            - name: POSTGRES_PASSWORD
              value: prismagoodfood
            - name: POSTGRES_DB
              value: commandes
        - name: commandes-api
          image: rg.fr-par.scw.cloud/goodfood/commandes-api:latest
          imagePullPolicy: "Always"
          env:
            - name: DATABASE_URL
              value: "postgresql://prisma:prismagoodfood@localhost:5432/commandes"
      imagePullSecrets:
        - name: registry-secret-deux

#Network
---
apiVersion: v1
kind: Service
metadata:
  name: loadbalancer-service
  annotations:
    external-dns.alpha.kubernetes.io/hostname: www.goodfood-restaurants.fr
spec:
  selector:
    app: front-end
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 30013
    - name: https
      protocol: TCP
      port: 443
      targetPort: 3000
  type: LoadBalancer


#DNS
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
  - apiGroups: [""]
    resources: ["services","endpoints","pods"]
    verbs: ["get","watch","list"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
  - kind: ServiceAccount
    name: external-dns
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-dns
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
        - name: external-dns
          image: k8s.gcr.io/external-dns/external-dns:v0.8.0
          args:
            - --source=service # ingress is also possible
            - --domain-filter=goodfood-restaurants.fr
            - --provider=scaleway
          env:
            - name: SCW_ACCESS_KEY
              value: "SCWJQ0CC3HX42F4F5508"
            - name: SCW_SECRET_KEY
              value: "4ddd378e-05ab-43a2-b7ad-5d599b72cd3d"
            - name: SCW_DEFAULT_ORGANIZATION_ID
              value: "3d8bf400-2afb-4b23-ad33-89721bd65125"
